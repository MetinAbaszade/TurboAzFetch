// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TurboazFetching.Data;

#nullable disable

namespace TurboazFetching.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230405125753_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TurboazFetching.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("TurboazFetching.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("BarterAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CreditAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("EngineVolume")
                        .HasColumnType("int");

                    b.Property<int>("FueltypeId")
                        .HasColumnType("int");

                    b.Property<int>("HorsePower")
                        .HasColumnType("int");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<int>("TransmissionId")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ColorId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FueltypeId");

                    b.HasIndex("ModelId");

                    b.HasIndex("RegionId");

                    b.HasIndex("TransmissionId");

                    b.HasIndex("YearId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("TurboazFetching.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TurboazFetching.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Qara"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Yaş Asfalt"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Boz"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Gümüşü"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ağ"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Bej"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Tünd qırmızı"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Qırmızı"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Çəhrayı"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Narıncı"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Qızılı"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Sarı"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Yaşıl"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Mavi"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Göy"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Bənövşəyi"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Qəhvəyi"
                        });
                });

            modelBuilder.Entity("TurboazFetching.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AZN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "USD"
                        },
                        new
                        {
                            Id = 3,
                            Name = "EUR"
                        });
                });

            modelBuilder.Entity("TurboazFetching.Entities.Fueltype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fueltypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Benzin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dizel"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Qaz"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Elektro"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Hibrid"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Plug-in Hibrid"
                        });
                });

            modelBuilder.Entity("TurboazFetching.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("TurboazFetching.Entities.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("TurboazFetching.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ağcabədi"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ağdam"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ağdaş"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ağstafa"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ağsu"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Astara"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Babək"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Bakı"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Balakən"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Beyləqan"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Bərdə"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Biləsuvar"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Cəbrayıl"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Cəlilabad"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Culfa"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Daşkəsən"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Dəliməmmədli"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Füzuli"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Gədəbəy"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Gəncə"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Goranboy"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Göyçay"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Göygöl"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Göytəpə"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Hacıqabul"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Horadiz"
                        },
                        new
                        {
                            Id = 27,
                            Name = "İmişli"
                        },
                        new
                        {
                            Id = 28,
                            Name = "İsmayıllı"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Kürdəmir"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Lerik"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Lənkəran"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Masallı"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Mingəçevir"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Naftalan"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Naxçıvan"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Neftçala"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Oğuz"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Ordubad"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Qax"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Qazax"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Qəbələ"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Qobustan"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Quba"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Qusar"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Saatlı"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Sabirabad"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Şabran"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Salyan"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Şamaxı"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Samux"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Şəki"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Şəmkir"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Şərur"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Şirvan"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Siyəzən"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Sumqayıt"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Şuşa"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Tərtər"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Tovuz"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Ucar"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Xaçmaz"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Xırdalan"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Xızı"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Xudat"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Yardımlı"
                        },
                        new
                        {
                            Id = 66,
                            Name = "Yevlax"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Zaqatala"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Zəngilan"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Zərdab"
                        });
                });

            modelBuilder.Entity("TurboazFetching.Entities.Transmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transmissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mexaniki"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Avtomat"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Robotlaşdırılmış"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Variator"
                        });
                });

            modelBuilder.Entity("TurboazFetching.Entities.Year", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Year");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = 2023
                        },
                        new
                        {
                            Id = 2,
                            Value = 2022
                        },
                        new
                        {
                            Id = 3,
                            Value = 2021
                        },
                        new
                        {
                            Id = 4,
                            Value = 2020
                        },
                        new
                        {
                            Id = 5,
                            Value = 2019
                        },
                        new
                        {
                            Id = 6,
                            Value = 2018
                        },
                        new
                        {
                            Id = 7,
                            Value = 2017
                        },
                        new
                        {
                            Id = 8,
                            Value = 2016
                        },
                        new
                        {
                            Id = 9,
                            Value = 2015
                        },
                        new
                        {
                            Id = 10,
                            Value = 2014
                        },
                        new
                        {
                            Id = 11,
                            Value = 2013
                        },
                        new
                        {
                            Id = 12,
                            Value = 2012
                        },
                        new
                        {
                            Id = 13,
                            Value = 2011
                        },
                        new
                        {
                            Id = 14,
                            Value = 2010
                        },
                        new
                        {
                            Id = 15,
                            Value = 2009
                        },
                        new
                        {
                            Id = 16,
                            Value = 2008
                        },
                        new
                        {
                            Id = 17,
                            Value = 2007
                        },
                        new
                        {
                            Id = 18,
                            Value = 2006
                        },
                        new
                        {
                            Id = 19,
                            Value = 2005
                        },
                        new
                        {
                            Id = 20,
                            Value = 2004
                        },
                        new
                        {
                            Id = 21,
                            Value = 2003
                        },
                        new
                        {
                            Id = 22,
                            Value = 2002
                        },
                        new
                        {
                            Id = 23,
                            Value = 2001
                        },
                        new
                        {
                            Id = 24,
                            Value = 2000
                        },
                        new
                        {
                            Id = 25,
                            Value = 1999
                        },
                        new
                        {
                            Id = 26,
                            Value = 1998
                        },
                        new
                        {
                            Id = 27,
                            Value = 1997
                        },
                        new
                        {
                            Id = 28,
                            Value = 1996
                        },
                        new
                        {
                            Id = 29,
                            Value = 1995
                        },
                        new
                        {
                            Id = 30,
                            Value = 1994
                        },
                        new
                        {
                            Id = 31,
                            Value = 1993
                        },
                        new
                        {
                            Id = 32,
                            Value = 1992
                        },
                        new
                        {
                            Id = 33,
                            Value = 1991
                        },
                        new
                        {
                            Id = 34,
                            Value = 1990
                        },
                        new
                        {
                            Id = 35,
                            Value = 1989
                        },
                        new
                        {
                            Id = 36,
                            Value = 1988
                        },
                        new
                        {
                            Id = 37,
                            Value = 1987
                        },
                        new
                        {
                            Id = 38,
                            Value = 1986
                        },
                        new
                        {
                            Id = 39,
                            Value = 1985
                        },
                        new
                        {
                            Id = 40,
                            Value = 1984
                        },
                        new
                        {
                            Id = 41,
                            Value = 1983
                        },
                        new
                        {
                            Id = 42,
                            Value = 1982
                        },
                        new
                        {
                            Id = 43,
                            Value = 1981
                        },
                        new
                        {
                            Id = 44,
                            Value = 1980
                        },
                        new
                        {
                            Id = 45,
                            Value = 1979
                        },
                        new
                        {
                            Id = 46,
                            Value = 1978
                        },
                        new
                        {
                            Id = 47,
                            Value = 1977
                        },
                        new
                        {
                            Id = 48,
                            Value = 1976
                        },
                        new
                        {
                            Id = 49,
                            Value = 1975
                        },
                        new
                        {
                            Id = 50,
                            Value = 1974
                        },
                        new
                        {
                            Id = 51,
                            Value = 1973
                        },
                        new
                        {
                            Id = 52,
                            Value = 1972
                        },
                        new
                        {
                            Id = 53,
                            Value = 1971
                        },
                        new
                        {
                            Id = 54,
                            Value = 1970
                        },
                        new
                        {
                            Id = 55,
                            Value = 1969
                        },
                        new
                        {
                            Id = 56,
                            Value = 1968
                        },
                        new
                        {
                            Id = 57,
                            Value = 1967
                        },
                        new
                        {
                            Id = 58,
                            Value = 1966
                        },
                        new
                        {
                            Id = 59,
                            Value = 1965
                        },
                        new
                        {
                            Id = 60,
                            Value = 1964
                        },
                        new
                        {
                            Id = 61,
                            Value = 1963
                        },
                        new
                        {
                            Id = 62,
                            Value = 1962
                        },
                        new
                        {
                            Id = 63,
                            Value = 1961
                        },
                        new
                        {
                            Id = 64,
                            Value = 1960
                        },
                        new
                        {
                            Id = 65,
                            Value = 1959
                        },
                        new
                        {
                            Id = 66,
                            Value = 1958
                        },
                        new
                        {
                            Id = 67,
                            Value = 1957
                        },
                        new
                        {
                            Id = 68,
                            Value = 1956
                        },
                        new
                        {
                            Id = 69,
                            Value = 1955
                        },
                        new
                        {
                            Id = 70,
                            Value = 1954
                        },
                        new
                        {
                            Id = 71,
                            Value = 1953
                        },
                        new
                        {
                            Id = 72,
                            Value = 1952
                        },
                        new
                        {
                            Id = 73,
                            Value = 1951
                        },
                        new
                        {
                            Id = 74,
                            Value = 1950
                        },
                        new
                        {
                            Id = 75,
                            Value = 1949
                        },
                        new
                        {
                            Id = 76,
                            Value = 1948
                        },
                        new
                        {
                            Id = 77,
                            Value = 1947
                        },
                        new
                        {
                            Id = 78,
                            Value = 1946
                        },
                        new
                        {
                            Id = 79,
                            Value = 1945
                        },
                        new
                        {
                            Id = 80,
                            Value = 1944
                        },
                        new
                        {
                            Id = 81,
                            Value = 1943
                        },
                        new
                        {
                            Id = 82,
                            Value = 1942
                        },
                        new
                        {
                            Id = 83,
                            Value = 1941
                        },
                        new
                        {
                            Id = 84,
                            Value = 1940
                        },
                        new
                        {
                            Id = 85,
                            Value = 1939
                        },
                        new
                        {
                            Id = 86,
                            Value = 1938
                        },
                        new
                        {
                            Id = 87,
                            Value = 1937
                        },
                        new
                        {
                            Id = 88,
                            Value = 1936
                        },
                        new
                        {
                            Id = 89,
                            Value = 1935
                        },
                        new
                        {
                            Id = 90,
                            Value = 1934
                        },
                        new
                        {
                            Id = 91,
                            Value = 1933
                        },
                        new
                        {
                            Id = 92,
                            Value = 1932
                        },
                        new
                        {
                            Id = 93,
                            Value = 1931
                        },
                        new
                        {
                            Id = 94,
                            Value = 1930
                        },
                        new
                        {
                            Id = 95,
                            Value = 1929
                        },
                        new
                        {
                            Id = 96,
                            Value = 1928
                        },
                        new
                        {
                            Id = 97,
                            Value = 1927
                        },
                        new
                        {
                            Id = 98,
                            Value = 1926
                        },
                        new
                        {
                            Id = 99,
                            Value = 1925
                        },
                        new
                        {
                            Id = 100,
                            Value = 1924
                        },
                        new
                        {
                            Id = 101,
                            Value = 1923
                        },
                        new
                        {
                            Id = 102,
                            Value = 1922
                        },
                        new
                        {
                            Id = 103,
                            Value = 1921
                        },
                        new
                        {
                            Id = 104,
                            Value = 1920
                        },
                        new
                        {
                            Id = 105,
                            Value = 1919
                        },
                        new
                        {
                            Id = 106,
                            Value = 1918
                        },
                        new
                        {
                            Id = 107,
                            Value = 1917
                        },
                        new
                        {
                            Id = 108,
                            Value = 1916
                        },
                        new
                        {
                            Id = 109,
                            Value = 1915
                        },
                        new
                        {
                            Id = 110,
                            Value = 1914
                        },
                        new
                        {
                            Id = 111,
                            Value = 1913
                        },
                        new
                        {
                            Id = 112,
                            Value = 1912
                        },
                        new
                        {
                            Id = 113,
                            Value = 1911
                        },
                        new
                        {
                            Id = 114,
                            Value = 1910
                        },
                        new
                        {
                            Id = 115,
                            Value = 1909
                        },
                        new
                        {
                            Id = 116,
                            Value = 1908
                        },
                        new
                        {
                            Id = 117,
                            Value = 1907
                        },
                        new
                        {
                            Id = 118,
                            Value = 1906
                        },
                        new
                        {
                            Id = 119,
                            Value = 1905
                        },
                        new
                        {
                            Id = 120,
                            Value = 1904
                        },
                        new
                        {
                            Id = 121,
                            Value = 1903
                        });
                });

            modelBuilder.Entity("TurboazFetching.Entities.Car", b =>
                {
                    b.HasOne("TurboazFetching.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurboazFetching.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurboazFetching.Entities.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurboazFetching.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurboazFetching.Entities.Fueltype", "Fueltype")
                        .WithMany()
                        .HasForeignKey("FueltypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurboazFetching.Entities.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TurboazFetching.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurboazFetching.Entities.Transmission", "Transmission")
                        .WithMany()
                        .HasForeignKey("TransmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurboazFetching.Entities.Year", "Year")
                        .WithMany()
                        .HasForeignKey("YearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Color");

                    b.Navigation("Currency");

                    b.Navigation("Fueltype");

                    b.Navigation("Model");

                    b.Navigation("Region");

                    b.Navigation("Transmission");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("TurboazFetching.Entities.Category", b =>
                {
                    b.HasOne("TurboazFetching.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");
                });

            modelBuilder.Entity("TurboazFetching.Entities.Image", b =>
                {
                    b.HasOne("TurboazFetching.Entities.Car", null)
                        .WithMany("Images")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TurboazFetching.Entities.Model", b =>
                {
                    b.HasOne("TurboazFetching.Entities.Brand", null)
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TurboazFetching.Entities.Brand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("TurboazFetching.Entities.Car", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
